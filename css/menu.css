.menu-wrap {  /* It wraps the whole burger menu */
  position: fixed;  /* To deactivate the scroll option - the menu should not move out of the viewport */
  top: 0;
  left: 0;
  z-index: 1; /* To have it on top */
}

.menu-wrap .toggler { /* checkbox is just for functionality */
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2; /* To have it on top - it's invisible but for functionality */
  cursor: pointer;  /* To have a pointer instead of a cursor when hovering over it */
  width: 50px;  /* The width of the checkbox */
  height: 50px; /* The height of the checkbox */
  opacity: 0; /* To make the checkbox invisible (checkbox is just for functionality) */
}

.menu-wrap .hamburger { /* .hamburger is the actual hamburger menu */
  position: absolute;
  top: 0; /* The same position as checkbox */
  left: 0;  /* The same position as checkbox */
  z-index: 1; /* To have it under the checkbox */
  width: 60px;
  height: 60px;
  padding: 1rem;
  background: var(--primary-color); /* To have the menu background the same color as the background with its transparentcy */
  display: flex;  /* To be able to align the three lines of the menu */
  align-items: center;
  justify-content: center;
}

/* Hamburger Line - just the middle line */
.menu-wrap .hamburger > div { /* > to get the immediate div */
  position: relative;
  flex: none; /* The item is sized according to its width and height properties. It is fully inflexible: it neither shrinks nor grows in relation to the flex container. This is equivalent to setting "flex: 0 0 auto". */
  width: 100%;  /* The length of the line */
  height: 2px;  /* The line width */
  background: #fff;
  display: flex;  /* To be able to align the line */
  align-items: center;  /* To have the line centered */
  justify-content: center;  /* To have the line centered */
  transition: all 0.4s ease;  /* To transform the burger into an x - .menu-wrap .toggler:checked + .hamburger > div:before */
}

/* Hamburger Lines - Top & Bottom lines - the two lines are initially superimposed */
.menu-wrap .hamburger > div::before,
.menu-wrap .hamburger > div::after {
  content: '';
  position: absolute; /* To have it absolute to the relative div (.hamburger > div) */
  z-index: 1;
  top: -10px; /* To move it up by 10px - the top line */
  width: 100%;
  height: 2px;
  background: inherit;  /* To inherit the background color from its parent (.hamburger > div) */
}

/* Moves the bottom line finally down */
.menu-wrap .hamburger > div::after {
  top: 10px;
}

/* Toggler Animation */
.menu-wrap .toggler:checked + .hamburger > div {  /* :checked is a pseudo class (only if it's checked) - + if .hamburger > div is right after .toggler:checked - next sibling */
  transform: rotate(135deg);  /* To rotate the three lines (burger) */
}

/* Turns Lines Into X */
.menu-wrap .toggler:checked + .hamburger > div:before,
.menu-wrap .toggler:checked + .hamburger > div:after {
  top: 0;
  transform: rotate(90deg);
}

/* Rotate On Hover When Checked */
.menu-wrap .toggler:checked:hover + .hamburger > div {
  transform: rotate(225deg);
}

/* Show Menu when the checkbox is checked */
.menu-wrap .toggler:checked ~ .menu { /* ~ because .menu is preceded (vorangegangen) by .toggler:checked with the same parent */
  visibility: visible;  /* To show the menu when the checkbox is checked */
}

.menu-wrap .toggler:checked ~ .menu > div { /* The background overlay for the menu */
  transform: scale(1);  /* To show the background overlay when the checkbox is checked - initially it is set to transform: scale(0); */
  transition-duration: var(--menu-speed);
}

.menu-wrap .toggler:checked ~ .menu > div > div { /* ~ because .menu is preceded (vorangegangen) by .toggler:checked with the same parent */
  opacity: 1; /* To make it visible when the checkbox is checked */
  transition:  opacity 0.4s ease 0.4s;
}

.menu-wrap .menu {  /* The menu itself */
  position: fixed;  /* An element with position: fixed; is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled.  */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  visibility: hidden; /* Initially the menu is hidden - it changes when the checkbox is checked */
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.menu-wrap .menu > div {  /* The background overlay for the menu */
  background: var(--overlay-color);
  border-radius: 50%; /* To have a round background when it comes in */
  width: 300vw; /* To don't see the round background after it cames in (transition) */
  height: 300vw;
  display: flex;  /* To be able to center the content of the menu */
  flex: none; /* To exclude the background circle from the limit of the container (90vw) - The item is sized according to its width and height properties. It is fully inflexible: it neither shrinks nor grows in relation to the flex container. This is equivalent to setting "flex: 0 0 auto". */
  align-items: center;
  justify-content: center;
  transform: scale(0);  /* To have the menu at the beginning not there - it changes after the checkbox is checked */
  transition: all 0.4s ease;  /* To get the menu */
}

.menu-wrap .menu > div > div {  /* To target the div after the background overlay div */
  text-align: center;
  max-width: 90vw;
  max-height: 100vh;
  opacity: 0;
  transition: opacity 0.4s ease;
}

.menu-wrap .menu > div > div > ul > li {
  list-style: none; /* To get rid of the bullet points */
  color: #fff;
  font-size: 1.5rem;
  padding: 1rem;
}

.menu-wrap .menu > div > div > ul > li > a {
  color: inherit; /* From li */
  text-decoration: none;  /* To get rid of the underlines */
  transition: color 0.4s ease;  /* For the hover effect */
}

.menu-wrap .menu > div > div > ul > li > a:hover {
  color: var(--secondary-color);
}